#!/bin/bash

shopt -s extglob


if [ -z "$1" ]
then
    echo "usage: $0 <command> [args]"
    exit -1
fi


. ~/bin/lib/client.sh

read_client_data


IMAGE=${CLIENT_DATA[docker_image]}
CLARUS_PORT=${CLIENT_DATA[clarus_port]}
CONTAINER=${CLIENT_DATA[container]}
DATA_CONTAINER=${CLIENT_DATA[db]}
DB_CONTAINER=${CLIENT_DATA[db_container]}
STORE_SETTINGS=${CLIENT_DATA[store_settings]}

if [ -z "$SOURCE_ROOT" ]
then
    SOURCE_ROOT=$HOME/src
fi

echo "SOURCE_ROOT: $SOURCE_ROOT"

NGINX_ROOT=$SOURCE_ROOT/infrastructure/docker/nginx

if [[ "cdca cita srta" =~ $LOWER_CLIENT ]]; then
    HOST_URL=brighttrac.dev
    BASE_ROOT=$SOURCE_ROOT/brighttrac/adex
    VM_BASE_ROOT=/brightlink_dev/brighttrac/adex
    VM_CLIENT_ROOT=/brightlink_dev/brighttrac/$LOWER_CLIENT
elif [[ "ndeb_acc ndeb_nonacc" =~ $LOWER_CLIENT ]]; then
    HOST_URL=brighttrac.dev
    BASE_ROOT=$SOURCE_ROOT/brighttrac/ndeb
    VM_BASE_ROOT=/brightlink_dev/brighttrac/ndeb
    VM_CLIENT_ROOT=/brightlink_dev/brighttrac/$LOWER_CLIENT
else
    HOST_URL=brighttrac.example.com
    BASE_ROOT=$SOURCE_ROOT/clarus/clarus
    VM_BASE_ROOT=/brightlink_dev/clarus/clarus
    VM_CLIENT_ROOT=/brightlink_dev/clarus/$LOWER_CLIENT
fi


DOCKER0=$(/sbin/ifconfig docker0 | grep "inet addr" | awk '{ print $2}' | cut -d: -f2)


COMMAND=$1
shift

case "$COMMAND" in

    @(dns) )

        docker run \
            --detach \
            --name dns \
            --publish $DOCKER0:53:53/udp \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            jderusse/dns-gen

        ;;


    @(nginx|proxy) )

        MODULES_ROOT=$SOURCE_ROOT/infrastructure

        docker run \
            -d \
            -p 80:80 \
            -p 443:443 \
            -e DOMAIN_NAME=$HOST_URL,store.example.com \
            -v $SOURCE_ROOT:/brightlink_dev:ro \
            -v $BASE_ROOT:/clarus:ro \
            -v $MODULES_ROOT/blcore:/blcore:ro \
            -v $MODULES_ROOT/blwebtop:/webtop:ro \
            -v $NGINX_ROOT/certs:/etc/nginx/certs:ro \
            -v $NGINX_ROOT/vhost.d:/etc/nginx/vhost.d:ro \
            -v /var/run/docker.sock:/tmp/docker.sock:ro \
            --name nginx \
            jwilder/nginx-proxy

        # Change the nginx user's UID to our UID so static content will load
        docker exec nginx usermod -u $(id -u) nginx && docker restart -t 0 nginx

        ;;


    @(brighttrac_nginx) )

        MODULES_ROOT=$SOURCE_ROOT/infrastructure

        docker run \
            -d \
            -p 80:80 \
            -p 443:443 \
            -e DOMAIN_NAME=$HOST_URL \
            -v $SOURCE_ROOT:/brightlink_dev:ro \
            -v $BASE_ROOT:/brighttrac:ro \
            -v $MODULES_ROOT/blcore:/blcore:ro \
            -v $MODULES_ROOT/blwebtop:/webtop:ro \
            -v $NGINX_ROOT/certs:/etc/nginx/certs:ro \
            -v $NGINX_ROOT/vhost.d:/etc/nginx/vhost.d:ro \
            -v /var/run/docker.sock:/tmp/docker.sock:ro \
            --name brighttrac_nginx \
            jwilder/nginx-proxy

        # Change the nginx user's UID to our UID so static content will load
        docker exec brighttrac_nginx usermod -u $(id -u) nginx && docker restart -t 0 brighttrac_nginx

        ;;


    @(db|database) )
            docker run \
                -d \
                --name ${DB_CONTAINER} \
                -e DOMAIN_NAME=dbhost \
                --volumes-from ${DATA_CONTAINER} \
                postgres

        ;;


    @(shell|tgshell|tg) )

        SHELL_ID=$(docker ps -aqf name=${LOWER_CLIENT}_shell)

        if [ -n "$SHELL_ID" ]
        then
            docker restart ${SHELL_ID} && docker attach ${SHELL_ID}
        else
            docker run \
                -it \
                --dns $DOCKER0 \
                -e TERM=screen-256color \
                -v $SOURCE_ROOT:/brightlink_dev \
                -u docker \
                --volumes-from vollog \
                --name ${LOWER_CLIENT}_shell \
                -w $VM_BASE_ROOT \
                $IMAGE \
                /home/docker/docker_env/bin/tg-admin -c $VM_CLIENT_ROOT/dev.cfg shell
        fi

        ;;


    @(bt|brighttrac|server) )
        docker run \
            -dit \
            --dns $DOCKER0 \
            -e TERM=screen-256color \
            -p ${CLARUS_PORT}:${CLARUS_PORT} \
            -v $SOURCE_ROOT:/brightlink_dev \
            -u docker \
            -e VIRTUAL_HOST=$HOST_URL \
            -e VIRTUAL_PORT=${CLARUS_PORT} \
            --volumes-from vollog \
            --name ${LOWER_CLIENT}_server \
            $IMAGE \
            /home/docker/docker_env/bin/python -u $VM_BASE_ROOT/start-brighttrac2.1.py $VM_CLIENT_ROOT/dev.cfg
        ;;


    @(store|satchmo) )

        docker run \
            -dit \
            --dns $DOCKER0 \
            -e TERM=screen-256color \
            -p 6086:6086 \
            -v $SOURCE_ROOT:/brightlink_dev \
            -u docker \
            -e VIRTUAL_HOST=store.example.com \
            -e VIRTUAL_PORT=6086 \
            --volumes-from vollog \
            --name ${LOWER_CLIENT}_store \
            -w /brightlink_dev/clarus/clarus \
            $IMAGE \
            /home/docker/docker_env/bin/python $VM_BASE_ROOT/brighttrac2/store/manage.py runserver --settings=${STORE_SETTINGS} 0.0.0.0:6086

        ;;


    @(ss|storeshell|store-shell) )

        SHELL_ID=$(docker ps -aqf name=${LOWER_CLIENT}_store_shell)

        if [ -n "$SHELL_ID" ]
        then
            docker restart ${SHELL_ID} && docker attach ${SHELL_ID}
        else
            docker run \
                -it \
                --dns $DOCKER0 \
                -e TERM=screen-256color \
                -v $SOURCE_ROOT:/brightlink_dev \
                -u docker \
                --volumes-from vollog \
                --name ${LOWER_CLIENT}_store_shell \
                -w /brightlink_dev/clarus/clarus \
                $IMAGE \
                /home/docker/docker_env/bin/python $VM_BASE_ROOT/brighttrac2/store/manage.py shell --settings=${STORE_SETTINGS}
        fi

        ;;


    @(jq) )
        VM_MODULES_ROOT=/brightlink_dev/infrastructure

        docker run \
            -dit \
            --dns $DOCKER0 \
            -e TERM=screen-256color \
            -v $SOURCE_ROOT:/brightlink_dev \
            -u docker \
            --volumes-from vollog \
            --name ${LOWER_CLIENT}_job_queue \
            -w /brightlink_dev/clarus/clarus \
            $IMAGE \
            /home/docker/docker_env/bin/python \
                $VM_MODULES_ROOT/blcore/blcore/job_queue/bin/start_job_queue_processor.py $VM_CLIENT_ROOT/dev.cfg

        ;;


    exec )

        docker exec -it $CONTAINER $@
        ;;


    logs )
        tmux rename-window "$LOWER_CLIENT logs"
        while true
        do
            docker attach --sig-proxy=false --no-stdin $CONTAINER 2>/dev/null \
                | grep -E --color 'blcore.events|$'

            sleep 2
        done
        ;;


    ip )
        docker  inspect -f '{{.NetworkSettings.IPAddress}}' $CONTAINER
        ;;


    dbip )
        docker  inspect -f '{{.NetworkSettings.IPAddress}}' $DB_CONTAINER
        ;;


    * )

        echo "Unknown command: $COMMAND"
        ;;
esac
